@model IEnumerable<CallCenterService.Models.Client>

@{
    ViewData["Title"] = "Index";
}
@section head {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.5/jspdf.debug.js" integrity="sha384-CchuzHs077vGtfhGYl9Qtc7Vx64rXBXdIAZIPbItbNyWIRTdG0oYAqki3Ry13Yzu" crossorigin="anonymous"></script>

    <style>
        @@media print {
            #search-clients {
                display: none;
            }
        }

        /* SEARCH */
        .searchInput {
            background-image: url('https://www.w3schools.com/css/searchicon.png '); /* https://www.w3schools.com/css/searchicon.png */
            background-position: 10px 12px;
            background-repeat: no-repeat;
            width: 200px;
            font-size: 16px;
            padding: 12px 20px 12px 40px;
            border: 1px solid #ddd;
            margin-bottom: 12px;
            margin-top: 6px;
        }

        .formUnit {
            white-space: nowrap;
        }
    </style>
}
<h2>Klienci</h2>

<p>
    <a asp-action="Create">Dodaj klienta</a>
</p>


<form id="search-clients">
    <p>
        <span class="formUnit">Imię: <input type="text" id="searchClientName" class="searchInput" onkeyup="searchingEngine()" /></span>
        <span class="formUnit">Nazwisko: <input type="text" id="searchClientSurname" class="searchInput" onkeyup="searchingEngine()" /></span>
        <span class="formUnit">Ulica: <input type="text" id="searchClientAddres" class="searchInput" onkeyup="searchingEngine()" /></span>
        <span class="formUnit">Miasto: <input type="text" id="searchClientCity" class="searchInput" onkeyup="searchingEngine()" /></span>

    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                ID
            </th>
            <th>
                Imię
            </th>
            <th>
                Nazwisko
            </th>
            <th>
                Ulica
            </th>
            <th>
                Kod pocztowy
            </th>
            <th>
                Miasto
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="searchBody">
        @foreach (var item in Model)
        {
            var clientName = item.FirstName;
            var clientSurname = item.SecondName;
            var clientAdress = item.Street;
            var clientCity = item.City;

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ClientId)
            </td>
            <td class="resultsclientName">
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td class="resultsclientSurname">
                @Html.DisplayFor(modelItem => item.SecondName)
            </td>
            <td class="resultsclientAddres">
              @item.Street @if (item.StreetNumber != null && item.ApartmentNumber != null)

              { @item.StreetNumber<span>/</span>@item.ApartmentNumber; }
                else if (item.StreetNumber != null && item.ApartmentNumber == null)
                { @item.StreetNumber;}
                else if (@item.StreetNumber == null && @item.ApartmentNumber != null)
                { @item.ApartmentNumber; }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostCode)
            </td>
            <td class="resultsclientCity">
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ClientId">Edytuj</a> |
                @*<a asp-action="Details" asp-route-id="@item.ClientId">Details</a> |*@
                <a asp-action="Delete" asp-route-id="@item.ClientId">Usuń</a> |
                <a asp-action="History" asp-route-id="@item.ClientId">Historia usterek</a> |
                <a asp-controller="Products" asp-action="Create" asp-route-id="@item.ClientId">Dodaj produkt</a> |
                <a asp-controller="Faults" asp-action="Create" asp-route-id="@item.ClientId">Dodaj usterkę</a>
            </td>
        </tr>
        }
    </tbody>
</table>
<script>

    function searchingEngine() {
        var tbody, trs, tr, searchByName, searchBySurname, searchByAddress, searchByCity, display, i;
        tbody = document.getElementById("searchBody");
        trs = tbody.getElementsByTagName("tr");

        searchByName = document.forms['search-clients'].querySelector("#searchClientName");
        searchBySurname = document.forms['search-clients'].querySelector("#searchClientSurname");
        searchByAddress = document.forms['search-clients'].querySelector("#searchClientAddres");
        searchByCity = document.forms['search-clients'].querySelector("#searchClientCity");


        for (i = 0; i < trs.length; i++) {
            tr = trs[i];
            if (
                checkFilter(tr, searchByName, "resultsclientName") &&
                checkFilter(tr, searchBySurname, "resultsclientSurname") &&
                checkFilter(tr, searchByAddress, "resultsclientAddres")&&
                checkFilter(tr, searchByCity, "resultsclientCity")
            ) {
                display = "";
            }
            else {
                display = "none";
            }

            tr.style.display = display;
        }

    }

    function checkFilter(tr, input, resultClass) {
        var inputValue = (input.value || "").toUpperCase();
        var resultValue = tr.getElementsByClassName(resultClass)[0].textContent.toUpperCase();
        return resultValue.indexOf(inputValue) > -1;
    }

    var tbody = document.getElementById("searchBody");
    var trs = tbody.getElementsByTagName("tr");

 
    var btn = document.getElementById("btn1").addEventListener("click", function (e) {
        e.preventDefault();

    })
    class User {
        constructor(clientName, clientSurname, clientAdress, clientCity) {
            this.clientName = clientName;
            this.clientSurname = clientSurname;
            this.clientAdress = clientAdress;
            this.clientCity = clientCity;

        }
    }

</script>